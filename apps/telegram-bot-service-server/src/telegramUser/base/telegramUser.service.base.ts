/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TelegramUser as PrismaTelegramUser } from "@prisma/client";

export class TelegramUserServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TelegramUserCountArgs, "select">
  ): Promise<number> {
    return this.prisma.telegramUser.count(args);
  }

  async telegramUsers(
    args: Prisma.TelegramUserFindManyArgs
  ): Promise<PrismaTelegramUser[]> {
    return this.prisma.telegramUser.findMany(args);
  }
  async telegramUser(
    args: Prisma.TelegramUserFindUniqueArgs
  ): Promise<PrismaTelegramUser | null> {
    return this.prisma.telegramUser.findUnique(args);
  }
  async createTelegramUser(
    args: Prisma.TelegramUserCreateArgs
  ): Promise<PrismaTelegramUser> {
    return this.prisma.telegramUser.create(args);
  }
  async updateTelegramUser(
    args: Prisma.TelegramUserUpdateArgs
  ): Promise<PrismaTelegramUser> {
    return this.prisma.telegramUser.update(args);
  }
  async deleteTelegramUser(
    args: Prisma.TelegramUserDeleteArgs
  ): Promise<PrismaTelegramUser> {
    return this.prisma.telegramUser.delete(args);
  }
}
